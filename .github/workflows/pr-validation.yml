name: Validate Connector PR

on:
  pull_request_target:
    paths:
      - 'src/connectors/**'
    types: [opened, labeled, unlabeled, synchronize]

jobs:
  check-connector:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch head branch
        run: |
          git fetch origin ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}

      - name: Get changed files
        id: files
        run: |
          # Get the list of changed files as a comma-separated string
          files=$(git diff --name-only ${{ github.event.pull_request.head.ref }} | tr '\n' ',')
          echo "files=$files" >> $GITHUB_ENV

      - name: Ensure only one connector is changed
        id: check_connector
        run: |
          connector_changed=""
          # Split the comma-separated list of files into an array
          IFS=',' read -ra changed_files <<< "${{ env.files }}"
          for changed_file in "${changed_files[@]}"
          do
            # Extract the first tree segments of the path (e.g., src/connectors/connector-name)
            connector_path=$(echo "$changed_file" | cut -d'/' -f1-3)

            if [[ "$connector_path" == src/connectors/* ]]
            then
              # Extract the connector name (e.g., connector-name)
              connector_name=$(echo "$connector_path" | cut -d'/' -f3)
              if [[ -z "$connector_changed" ]]
              then
                connector_changed="$connector_name"
              elif [[ "$connector_changed" != "$connector_name" ]]
              then
                echo "Multiple connectors have been changed: $connector_changed and $connector_name. Please change only one connector per PR."
                exit 1
              fi
            fi
          done
          echo "Connector changed: $connector_changed"
          echo "::set-output name=connector::$connector_changed"

      - name: Add labels
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: |
            ${{ steps.check_connector.outputs.connector }}
            connector-change

  validate-version:
    runs-on: ubuntu-latest
    needs: check-connector
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-version-validation') }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch head branch
        run: |
          git fetch origin ${{ github.event.pull_request.head.ref }}:${{ github.event.pull_request.head.ref }}

      - name: Get changed files
        id: files
        run: |
          # Get the list of changed files as a comma-separated string
          files=$(git diff --name-only ${{ github.event.pull_request.head.ref }} | tr '\n' ',')
          echo "files=$files" >> $GITHUB_ENV

      - name: Ensure connector version is bumped
        run: |
          connector_changed=""
          # Split the comma-separated list of files into an array
          IFS=',' read -ra changed_files <<< "${{ env.files }}"
          for changed_file in "${changed_files[@]}"
          do
            # Extract the first tree segments of the path (e.g., src/connectors/connector-name)
            connector_path=$(echo "$changed_file" | cut -d'/' -f1-3)
            if [[ "$connector_path" == src/connectors/* ]]
            then
              # Extract the connector name (e.g., connector-name)
              connector_name=$(echo "$connector_path" | cut -d'/' -f3)
              if [[ -z "$connector_changed" ]]
              then
                MAIN_VERSION=$(git show origin/main:src/connectors/$connector_name/package.json | jq -r .version)
                PR_VERSION=$(jq -r .version src/connectors/$connector_name/package.json)
                if [ "$MAIN_VERSION" = "$PR_VERSION" ]; then
                  echo "Error: The version in src/connectors/$connector_name/package.json is the same as in the main branch. Please bump the version"
                  exit 1
                fi
              fi
            fi
          done
